/* Generated By:JavaCC(jj2IntelliJ output version): Do not edit this line. JavaCCParserTreeConstants.java Version 5.0 */
package org.gark87.idea.javacc.generated;

import com.intellij.psi.tree.IElementType;
public interface JavaCCParserTreeConstants
{
  public IElementType JJTJAVACC_INPUT = new JavaCCParserElementType("javacc_input");
  public IElementType JJTJAVACC_OPTIONS = new JavaCCParserElementType("javacc_options");
  public IElementType JJTOPTION_BINDING = new JavaCCParserElementType("option_binding");
  public IElementType JJTPRODUCTION = new JavaCCParserElementType("production");
  public IElementType JJTJAVACODE_PRODUCTION = new JavaCCParserElementType("javacode_production");
  public IElementType JJTBNF_PRODUCTION = new JavaCCParserElementType("bnf_production");
  public IElementType JJTREGULAR_EXPR_PRODUCTION = new JavaCCParserElementType("regular_expr_production");
  public IElementType JJTTOKEN_MANAGER_DECLS = new JavaCCParserElementType("token_manager_decls");
  public IElementType JJTREGEXPR_KIND = new JavaCCParserElementType("regexpr_kind");
  public IElementType JJTREGEXPR_SPEC = new JavaCCParserElementType("regexpr_spec");
  public IElementType JJTEXPANSION_CHOICES = new JavaCCParserElementType("expansion_choices");
  public IElementType JJTEXPANSION = new JavaCCParserElementType("expansion");
  public IElementType JJTLOCAL_LOOKAHEAD = new JavaCCParserElementType("local_lookahead");
  public IElementType JJTEXPANSION_UNIT = new JavaCCParserElementType("expansion_unit");
  public IElementType JJTREGULAR_EXPRESSION = new JavaCCParserElementType("regular_expression");
  public IElementType JJTCOMPLEX_REGULAR_EXPRESSION_CHOICES = new JavaCCParserElementType("complex_regular_expression_choices");
  public IElementType JJTCOMPLEX_REGULAR_EXPRESSION = new JavaCCParserElementType("complex_regular_expression");
  public IElementType JJTCOMPLEX_REGULAR_EXPRESSION_UNIT = new JavaCCParserElementType("complex_regular_expression_unit");
  public IElementType JJTCHARACTER_LIST = new JavaCCParserElementType("character_list");
  public IElementType JJTCHARACTER_DESCRIPTOR = new JavaCCParserElementType("character_descriptor");
  public IElementType JJTIDENTIFIER = new JavaCCParserElementType("identifier");
  public IElementType JJTNODE_DESCRIPTOR = new JavaCCParserElementType("node_descriptor");
  public IElementType JJTNODE_DESCRIPTOR_EXPRESSION = new JavaCCParserElementType("node_descriptor_expression");
  public IElementType JJTJAVAIDENTIFIER = new JavaCCParserElementType("JavaIdentifier");
  public IElementType JJTSHIFTOPS = new JavaCCParserElementType("ShiftOps");
  public IElementType JJTOTHERASSIGNMENTOPS = new JavaCCParserElementType("OtherAssignmentOps");
  public IElementType JJTCOMPILATIONUNIT = new JavaCCParserElementType("CompilationUnit");
  public IElementType JJTJAVACOMPILATIONUNIT = new JavaCCParserElementType("JavaCompilationUnit");
  public IElementType JJTPACKAGEDECLARATION = new JavaCCParserElementType("PackageDeclaration");
  public IElementType JJTIMPORTDECLARATION = new JavaCCParserElementType("ImportDeclaration");
  public IElementType JJTTYPEDECLARATION = new JavaCCParserElementType("TypeDeclaration");
  public IElementType JJTCLASSDECLARATION = new JavaCCParserElementType("ClassDeclaration");
  public IElementType JJTUNMODIFIEDCLASSDECLARATION = new JavaCCParserElementType("UnmodifiedClassDeclaration");
  public IElementType JJTCLASSBODY = new JavaCCParserElementType("ClassBody");
  public IElementType JJTNESTEDCLASSDECLARATION = new JavaCCParserElementType("NestedClassDeclaration");
  public IElementType JJTCLASSBODYDECLARATION = new JavaCCParserElementType("ClassBodyDeclaration");
  public IElementType JJTMETHODDECLARATIONLOOKAHEAD = new JavaCCParserElementType("MethodDeclarationLookahead");
  public IElementType JJTINTERFACEDECLARATION = new JavaCCParserElementType("InterfaceDeclaration");
  public IElementType JJTNESTEDINTERFACEDECLARATION = new JavaCCParserElementType("NestedInterfaceDeclaration");
  public IElementType JJTUNMODIFIEDINTERFACEDECLARATION = new JavaCCParserElementType("UnmodifiedInterfaceDeclaration");
  public IElementType JJTINTERFACEMEMBERDECLARATION = new JavaCCParserElementType("InterfaceMemberDeclaration");
  public IElementType JJTFIELDDECLARATION = new JavaCCParserElementType("FieldDeclaration");
  public IElementType JJTVARIABLEDECLARATOR = new JavaCCParserElementType("VariableDeclarator");
  public IElementType JJTVARIABLEDECLARATORID = new JavaCCParserElementType("VariableDeclaratorId");
  public IElementType JJTVARIABLEINITIALIZER = new JavaCCParserElementType("VariableInitializer");
  public IElementType JJTARRAYINITIALIZER = new JavaCCParserElementType("ArrayInitializer");
  public IElementType JJTMETHODDECLARATION = new JavaCCParserElementType("MethodDeclaration");
  public IElementType JJTMETHODDECLARATOR = new JavaCCParserElementType("MethodDeclarator");
  public IElementType JJTFORMALPARAMETERS = new JavaCCParserElementType("FormalParameters");
  public IElementType JJTFORMALPARAMETER = new JavaCCParserElementType("FormalParameter");
  public IElementType JJTCONSTRUCTORDECLARATION = new JavaCCParserElementType("ConstructorDeclaration");
  public IElementType JJTEXPLICITCONSTRUCTORINVOCATION = new JavaCCParserElementType("ExplicitConstructorInvocation");
  public IElementType JJTINITIALIZER = new JavaCCParserElementType("Initializer");
  public IElementType JJTTYPE = new JavaCCParserElementType("Type");
  public IElementType JJTPRIMITIVETYPE = new JavaCCParserElementType("PrimitiveType");
  public IElementType JJTRESULTTYPE = new JavaCCParserElementType("ResultType");
  public IElementType JJTNAME = new JavaCCParserElementType("Name");
  public IElementType JJTNAMELIST = new JavaCCParserElementType("NameList");
  public IElementType JJTEXPRESSION = new JavaCCParserElementType("Expression");
  public IElementType JJTASSIGNMENTOPERATOR = new JavaCCParserElementType("AssignmentOperator");
  public IElementType JJTCONDITIONALEXPRESSION = new JavaCCParserElementType("ConditionalExpression");
  public IElementType JJTCONDITIONALOREXPRESSION = new JavaCCParserElementType("ConditionalOrExpression");
  public IElementType JJTCONDITIONALANDEXPRESSION = new JavaCCParserElementType("ConditionalAndExpression");
  public IElementType JJTINCLUSIVEOREXPRESSION = new JavaCCParserElementType("InclusiveOrExpression");
  public IElementType JJTEXCLUSIVEOREXPRESSION = new JavaCCParserElementType("ExclusiveOrExpression");
  public IElementType JJTANDEXPRESSION = new JavaCCParserElementType("AndExpression");
  public IElementType JJTEQUALITYEXPRESSION = new JavaCCParserElementType("EqualityExpression");
  public IElementType JJTINSTANCEOFEXPRESSION = new JavaCCParserElementType("InstanceOfExpression");
  public IElementType JJTRELATIONALEXPRESSION = new JavaCCParserElementType("RelationalExpression");
  public IElementType JJTSHIFTEXPRESSION = new JavaCCParserElementType("ShiftExpression");
  public IElementType JJTADDITIVEEXPRESSION = new JavaCCParserElementType("AdditiveExpression");
  public IElementType JJTMULTIPLICATIVEEXPRESSION = new JavaCCParserElementType("MultiplicativeExpression");
  public IElementType JJTUNARYEXPRESSION = new JavaCCParserElementType("UnaryExpression");
  public IElementType JJTPREINCREMENTEXPRESSION = new JavaCCParserElementType("PreIncrementExpression");
  public IElementType JJTPREDECREMENTEXPRESSION = new JavaCCParserElementType("PreDecrementExpression");
  public IElementType JJTUNARYEXPRESSIONNOTPLUSMINUS = new JavaCCParserElementType("UnaryExpressionNotPlusMinus");
  public IElementType JJTCASTLOOKAHEAD = new JavaCCParserElementType("CastLookahead");
  public IElementType JJTPOSTFIXEXPRESSION = new JavaCCParserElementType("PostfixExpression");
  public IElementType JJTCASTEXPRESSION = new JavaCCParserElementType("CastExpression");
  public IElementType JJTPRIMARYEXPRESSION = new JavaCCParserElementType("PrimaryExpression");
  public IElementType JJTPRIMARYPREFIX = new JavaCCParserElementType("PrimaryPrefix");
  public IElementType JJTPRIMARYSUFFIX = new JavaCCParserElementType("PrimarySuffix");
  public IElementType JJTLITERAL = new JavaCCParserElementType("Literal");
  public IElementType JJTINTEGERLITERAL = new JavaCCParserElementType("IntegerLiteral");
  public IElementType JJTBOOLEANLITERAL = new JavaCCParserElementType("BooleanLiteral");
  public IElementType JJTSTRINGLITERAL = new JavaCCParserElementType("StringLiteral");
  public IElementType JJTNULLLITERAL = new JavaCCParserElementType("NullLiteral");
  public IElementType JJTARGUMENTS = new JavaCCParserElementType("Arguments");
  public IElementType JJTARGUMENTLIST = new JavaCCParserElementType("ArgumentList");
  public IElementType JJTALLOCATIONEXPRESSION = new JavaCCParserElementType("AllocationExpression");
  public IElementType JJTARRAYDIMSANDINITS = new JavaCCParserElementType("ArrayDimsAndInits");
  public IElementType JJTSTATEMENT = new JavaCCParserElementType("Statement");
  public IElementType JJTLABELEDSTATEMENT = new JavaCCParserElementType("LabeledStatement");
  public IElementType JJTBLOCK = new JavaCCParserElementType("Block");
  public IElementType JJTBLOCKSTATEMENT = new JavaCCParserElementType("BlockStatement");
  public IElementType JJTLOCALVARIABLEDECLARATION = new JavaCCParserElementType("LocalVariableDeclaration");
  public IElementType JJTEMPTYSTATEMENT = new JavaCCParserElementType("EmptyStatement");
  public IElementType JJTSTATEMENTEXPRESSION = new JavaCCParserElementType("StatementExpression");
  public IElementType JJTSWITCHSTATEMENT = new JavaCCParserElementType("SwitchStatement");
  public IElementType JJTSWITCHLABEL = new JavaCCParserElementType("SwitchLabel");
  public IElementType JJTIFSTATEMENT = new JavaCCParserElementType("IfStatement");
  public IElementType JJTWHILESTATEMENT = new JavaCCParserElementType("WhileStatement");
  public IElementType JJTDOSTATEMENT = new JavaCCParserElementType("DoStatement");
  public IElementType JJTFORSTATEMENT = new JavaCCParserElementType("ForStatement");
  public IElementType JJTFORINIT = new JavaCCParserElementType("ForInit");
  public IElementType JJTSTATEMENTEXPRESSIONLIST = new JavaCCParserElementType("StatementExpressionList");
  public IElementType JJTFORUPDATE = new JavaCCParserElementType("ForUpdate");
  public IElementType JJTBREAKSTATEMENT = new JavaCCParserElementType("BreakStatement");
  public IElementType JJTCONTINUESTATEMENT = new JavaCCParserElementType("ContinueStatement");
  public IElementType JJTRETURNSTATEMENT = new JavaCCParserElementType("ReturnStatement");
  public IElementType JJTTHROWSTATEMENT = new JavaCCParserElementType("ThrowStatement");
  public IElementType JJTSYNCHRONIZEDSTATEMENT = new JavaCCParserElementType("SynchronizedStatement");
  public IElementType JJTTRYSTATEMENT = new JavaCCParserElementType("TryStatement");


}
/* JavaCC - OriginalChecksum=85ce64e967d3da7f5e10ec1d71a442c4 (do not edit this line) */
